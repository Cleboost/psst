name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y libglib2.0-dev libcairo2-dev
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy -- -D warnings

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libglib2.0-dev libcairo2-dev
      - name: Build
        run: cargo build --release
      - name: Bundle macOS DMG
        if: matrix.os == 'macOS-latest'
        run: |
          cargo install cargo-bundle
          brew install create-dmg
          cargo bundle --release
          create-dmg --volname "Psst" --skip-jenkins "Psst.dmg" "target/release/bundle/osx/Psst.app"
        working-directory: psst-gui
      - uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}
          path: |
            target/release/psst-gui${{ matrix.os == 'windows-latest' && '.exe' || '' }}
            ${{ matrix.os == 'macOS-latest' && 'psst-gui/Psst.dmg' || '' }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Prepare Assets
        run: |
          mkdir release
          mv artifacts/*/psst-gui* release/
          mv artifacts/*/Psst.dmg release/ || true
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: rolling
          name: Rolling Release
          files: release/*
